(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{2234:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"中文题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中文题目"}},[s._v("#")]),s._v(" 中文题目")]),s._v(" "),a("div",[a("p",[s._v("中位数是有序列表中间的数。如果列表长度是偶数，中位数则是中间两个数的平均值。")]),s._v(" "),a("p",[s._v("例如，")]),s._v(" "),a("p",[s._v("[2,3,4] 的中位数是 3")]),s._v(" "),a("p",[s._v("[2,3] 的中位数是 (2 + 3) / 2 = 2.5")]),s._v(" "),a("p",[s._v("设计一个支持以下两种操作的数据结构：")]),s._v(" "),a("ul",[a("li",[s._v("void addNum(int num) - 从数据流中添加一个整数到数据结构中。")]),s._v(" "),a("li",[s._v("double findMedian() - 返回目前所有元素的中位数。")])]),s._v(" "),a("p",[a("strong",[s._v("示例：")])]),s._v(" "),a("pre",[s._v("addNum(1)\naddNum(2)\nfindMedian() -> 1.5\naddNum(3) \nfindMedian() -> 2")]),s._v(" "),a("p",[a("strong",[s._v("进阶:")])]),s._v(" "),a("ol",[a("li",[s._v("如果数据流中所有整数都在 0 到 100 范围内，你将如何优化你的算法？")]),s._v(" "),a("li",[s._v("如果数据流中 99% 的整数都在 0 到 100 范围内，你将如何优化你的算法？")])])]),s._v(" "),a("h2",{attrs:{id:"通过代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过代码"}},[s._v("#")]),s._v(" 通过代码")]),s._v(" "),a("RecoDemo",[a("template",{slot:"code-Java-1"},[a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MedianFinder")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Queue")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" minQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" maxQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n        * initialize your data structure here.\n        */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3，1，2，4  5，8，6，7，9")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 大顶堆      小顶堆")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 保证小顶堆比大顶堆多一个，这样取中位数，可以直接取小顶堆的第一个")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MedianFinder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        minQueue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PriorityQueue")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//小顶堆，保存较大的一半")]),s._v("\n        maxQueue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PriorityQueue")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Comparator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reverseOrder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//大顶堆，保存较小的一半")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("addNum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 个数不相等，说明小顶堆比大顶堆个数多，个数多少是正确的")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 我们向小顶堆中添加一个元素")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 然后推出一个最小的加入到大顶堆，这样保证了顺序和个数")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("minQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" maxQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            minQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            maxQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("minQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 个数相等的情况下，我们向大顶堆添加一个元素")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 然后推出一个大顶堆元素到小顶堆中，保证小顶堆比大顶堆多一个")]),s._v("\n            maxQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            minQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("maxQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("findMedian")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先判断个数，再取出值")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" minQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" maxQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" minQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("peek")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("minQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("peek")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" maxQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("peek")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * Your MedianFinder object will be instantiated and called as such:\n * MedianFinder obj = new MedianFinder();\n * obj.addNum(num);\n * double param_2 = obj.findMedian();\n */")])])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br")])])])],2),s._v(" "),a("h2",{attrs:{id:"官方题解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官方题解"}},[s._v("#")]),s._v(" 官方题解")]),s._v(" "),a("h4",{attrs:{id:"方法一：简单排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法一：简单排序"}},[s._v("#")]),s._v(" 方法一：简单排序")]),s._v(" "),a("p",[s._v("照问题说的做。")]),s._v(" "),a("p",[a("strong",[s._v("算法：")]),s._v("\n将数字存储在可调整大小的容器中。每次需要输出中间值时，对容器进行排序并输出中间值。")]),s._v(" "),a("div",{staticClass:"language-C++ [ ] line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class MedianFinder {\n    vector<double> store;\n\npublic:\n    // Adds a number into the data structure.\n    void addNum(int num)\n    {\n        store.push_back(num);\n    }\n\n    // Returns the median of current data stream\n    double findMedian()\n    {\n        sort(store.begin(), store.end());\n\n        int n = store.size();\n        return (n & 1 ? store[n / 2] : (store[n / 2 - 1] + store[n / 2]) * 0.5);\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[a("strong",[s._v("复杂度分析")])]),s._v(" "),a("ul",[a("li",[s._v("时间复杂度："),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("n")]),a("mi",[s._v("log")]),a("mo",[s._v("⁡")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")]),a("mo",[s._v("+")]),a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mn",[s._v("1")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")]),a("mo",[s._v("≃")]),a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("n")]),a("mi",[s._v("log")]),a("mo",[s._v("⁡")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(n\\log n) + O(1) \\simeq O(n\\log n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mop"},[s._v("lo"),a("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[s._v("+")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord"},[s._v("1")]),a("span",{staticClass:"mclose"},[s._v(")")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),a("span",{staticClass:"mrel"},[s._v("≃")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mop"},[s._v("lo"),a("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v("。")])]),s._v(" "),a("ol",[a("li",[s._v("添加一个数字对于一个有效调整大小方案的容器来说需要花费 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mn",[s._v("1")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(1)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord"},[s._v("1")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 的时间。")]),s._v(" "),a("li",[s._v("找到中间值主要取决于发生的排序。对于标准比较排序，这需要 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("n")]),a("mi",[s._v("log")]),a("mo",[s._v("⁡")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(n \\log n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mop"},[s._v("lo"),a("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 时间。")])]),s._v(" "),a("ul",[a("li",[s._v("空间复杂度："),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 线性空间，用于在容器中保存输入。除了需要的空间之外没有其他空间（因为通常可以在适当的位置进行排序）。")])]),s._v(" "),a("h4",{attrs:{id:"方法二：-插入排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法二：-插入排序"}},[s._v("#")]),s._v(" 方法二： 插入排序")]),s._v(" "),a("p",[s._v("保持输入容器始终排序")]),s._v(" "),a("p",[a("strong",[s._v("算法：")]),s._v("\n哪种算法允许将一个数字添加到已排序的数字列表中，但仍保持整个列表的排序状态？插入排序！")]),s._v(" "),a("p",[s._v("我们假设当前列表已经排序。当一个新的数字出现时，我们必须将它添加到列表中，同时保持列表的排序性质。这可以通过使用二分搜索找到插入传入号码的正确位置来轻松实现。\n（记住，列表总是排序的）。一旦找到位置，我们需要将所有较高的元素移动一个空间，以便为传入的数字腾出空间。")]),s._v(" "),a("p",[s._v("当插入查询的数量较少或者中间查找查询的数量大致相同。 此方法会很好地工作。")]),s._v(" "),a("div",{staticClass:"language-C++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class MedianFinder {\n    vector<int> store; // resize-able container\n\npublic:\n    // Adds a number into the data structure.\n    void addNum(int num)\n    {\n        if (store.empty())\n            store.push_back(num);\n        else\n            store.insert(lower_bound(store.begin(), store.end(), num), num);     // binary search and insertion combined\n    }\n\n    // Returns the median of current data stream\n    double findMedian()\n    {\n        int n = store.size();\n        return n & 1 ? store[n / 2] : (store[n / 2 - 1] + store[n / 2]) * 0.5;\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[a("strong",[s._v("复杂度分析")])]),s._v(" "),a("ul",[a("li",[s._v("时间复杂度："),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")]),a("mo",[s._v("+")]),a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("log")]),a("mo",[s._v("⁡")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")]),a("mo",[s._v("≈")]),a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(n) + O(\\log n) \\approx O(n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[s._v("+")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mop"},[s._v("lo"),a("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),a("span",{staticClass:"mrel"},[s._v("≈")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(".")])]),s._v(" "),a("ol",[a("li",[s._v("二分搜索需要花费 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("log")]),a("mo",[s._v("⁡")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(\\log n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mop"},[s._v("lo"),a("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 时间才能找到正确的插入位置。")]),s._v(" "),a("li",[s._v("插入可能需要花费 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 的时间，因为必须在容器中移动元素为新元素腾出空间。")])]),s._v(" "),a("ul",[a("li",[s._v("空间复杂度："),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 线性空间，用于在容器中保存输入。")])]),s._v(" "),a("h4",{attrs:{id:"方法三：两个堆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法三：两个堆"}},[s._v("#")]),s._v(" 方法三：两个堆")]),s._v(" "),a("p",[s._v("以上两种方法对如何解决这个问题提供了一些有价值的见解。具体来说，我们可以推断出两件事：")]),s._v(" "),a("ol",[a("li",[s._v("如果我们可以一直直接访问中值元素，那么找到中值将需要一个恒定的时间。")]),s._v(" "),a("li",[s._v("如果我们能找到一种相当快速的方法来增加容器的数量，那么所产生的额外操作可能会减少。")])]),s._v(" "),a("p",[s._v("但也许最重要的洞察是我们只需要一种一致的方式来访问中值元素，这是不容易观察到的。不需要对整个输入进行排序。")]),s._v(" "),a("p",[s._v("事实证明，有两种数据结构符合：")]),s._v(" "),a("ol",[a("li",[s._v("堆（或优先级队列）")]),s._v(" "),a("li",[s._v("自平衡二进制搜索树（我们将在方法4中详细讨论它们）")])]),s._v(" "),a("p",[s._v("堆是这道题的天然原料！向元素添加元素需要对数时间复杂度。它们还可以直接访问组中的最大/最小元素。")]),s._v(" "),a("p",[s._v("如果我们可以用以下方式维护两个堆：")]),s._v(" "),a("ol",[a("li",[s._v("用于存储输入数字中较小一半的最大堆")]),s._v(" "),a("li",[s._v("用于存储输入数字的较大一半的最小堆")])]),s._v(" "),a("p",[s._v("这样就可以访问输入中的中值：它们组成堆的顶部！")]),s._v(" "),a("p",[s._v("如果满足以下条件：")]),s._v(" "),a("ol",[a("li",[s._v("两个堆都是平衡的（或接近平衡的）")]),s._v(" "),a("li",[s._v("最大堆包含所有较小的数字，而最小堆包含所有较大的数字")])]),s._v(" "),a("p",[s._v("那么我们可以这样说：")]),s._v(" "),a("ol",[a("li",[s._v("最大堆中的所有数字都小于或等于最大堆的top元素（我们称之为 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("x")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("x")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("x")])])])]),s._v("）")]),s._v(" "),a("li",[s._v("最小堆中的所有数字都大于或等于最小堆的顶部元素（我们称之为 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("y")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("y")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.625em","vertical-align":"-0.19444em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[s._v("y")])])])]),s._v("）")])]),s._v(" "),a("p",[s._v("那么 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("x")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("x")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("x")])])])]),s._v(" 和 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("y")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("y")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.625em","vertical-align":"-0.19444em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03588em"}},[s._v("y")])])])]),s._v(" 几乎小于（或等于）元素的一半，大于（或等于）另一半。这就是中值元素的定义。")]),s._v(" "),a("p",[s._v("这使我们在这种方法中遇到了一个巨大的难题：平衡这两个堆！")]),s._v(" "),a("p",[a("strong",[s._v("算法：")])]),s._v(" "),a("ul",[a("li",[s._v("两个优先级队列：")])]),s._v(" "),a("ol",[a("li",[s._v("用于存储较小一半数字的最大堆 "),a("code",[s._v("lo")])]),s._v(" "),a("li",[s._v("用于存储较大一半数字的最小堆 "),a("code",[s._v("hi")])])]),s._v(" "),a("ul",[a("li",[s._v("最大堆 "),a("code",[s._v("lo")]),s._v(" 允许存储的元素最多比最小堆 "),a("code",[s._v("hi")]),s._v(" 多一个。因此，如果我们处理了 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("k")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("k")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[s._v("k")])])])]),s._v(" 元素：")])]),s._v(" "),a("ol",[a("li",[s._v("如果 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("k")]),a("mo",[s._v("=")]),a("mn",[s._v("2")]),a("mo",[s._v("∗")]),a("mi",[s._v("n")]),a("mo",[s._v("+")]),a("mn",[s._v("1")]),a("mspace",{attrs:{width:"1em"}}),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",{attrs:{mathvariant:"normal"}},[s._v("∀")]),a("mo",{attrs:{separator:"true"}},[s._v(",")]),a("mi",[s._v("n")]),a("mo",[s._v("∈")]),a("mi",[s._v("z")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("k=2*n+1 \\quad(\\forall,n \\in \\mathbb z)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[s._v("k")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),a("span",{staticClass:"mrel"},[s._v("=")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),a("span",{staticClass:"mord"},[s._v("2")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[s._v("∗")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.66666em","vertical-align":"-0.08333em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[s._v("+")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord"},[s._v("1")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"1em"}}),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord"},[s._v("∀")]),a("span",{staticClass:"mpunct"},[s._v(",")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),a("span",{staticClass:"mrel"},[s._v("∈")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.04398em"}},[s._v("z")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 则允许 "),a("code",[s._v("lo")]),s._v(" 持有 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("n")]),a("mo",[s._v("+")]),a("mn",[s._v("1")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("n+1")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.66666em","vertical-align":"-0.08333em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[s._v("+")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),a("span",{staticClass:"mord"},[s._v("1")])])])]),s._v(" 元素，而 "),a("code",[s._v("hi")]),s._v(" 可以持有 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("n")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("n")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")])])])]),s._v(" 元素。")]),s._v(" "),a("li",[s._v("如果 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("k")]),a("mo",[s._v("=")]),a("mn",[s._v("2")]),a("mo",[s._v("∗")]),a("mi",[s._v("n")]),a("mspace",{attrs:{width:"1em"}}),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",{attrs:{mathvariant:"normal"}},[s._v("∀")]),a("mo",{attrs:{separator:"true"}},[s._v(",")]),a("mi",[s._v("n")]),a("mo",[s._v("∈")]),a("mi",[s._v("z")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("k=2*n\\quad(\\forall,n\\in\\mathbb z)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.03148em"}},[s._v("k")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),a("span",{staticClass:"mrel"},[s._v("=")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),a("span",{staticClass:"mord"},[s._v("2")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[s._v("∗")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"1em"}}),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord"},[s._v("∀")]),a("span",{staticClass:"mpunct"},[s._v(",")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),a("span",{staticClass:"mrel"},[s._v("∈")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.04398em"}},[s._v("z")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v("，那么两个堆都是平衡的，并且每个堆都包含 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("n")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("n")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")])])])]),s._v(" 个元素。")])]),s._v(" "),a("p",[s._v("这给了我们一个很好的特性，即当堆完全平衡时，中间值可以从两个堆的顶部派生。否则，最大堆 "),a("code",[s._v("lo")]),s._v(" 的顶部保留合法的中间值。")]),s._v(" "),a("ul",[a("li",[s._v("添加一个数 "),a("code",[s._v("num")]),s._v("：")])]),s._v(" "),a("ol",[a("li",[s._v("将 "),a("code",[s._v("num")]),s._v(" 添加到最大堆 "),a("code",[s._v("lo")]),s._v("。因为 "),a("code",[s._v("lo")]),s._v(" 收到了一个新元素，所以我们必须为 "),a("code",[s._v("hi")]),s._v(" 做一个平衡步骤。因此，从 "),a("code",[s._v("lo")]),s._v(" 中移除最大的元素并将其提供给 "),a("code",[s._v("hi")]),s._v("。")]),s._v(" "),a("li",[s._v("在上一个操作之后，最小堆 "),a("code",[s._v("hi")]),s._v(" 可能会比最大堆 "),a("code",[s._v("lo")]),s._v(" 保留更多的元素。我们通过从 "),a("code",[s._v("hi")]),s._v(" 中去掉最小的元素并将其提供给 "),a("code",[s._v("lo")]),s._v(" 来解决这个问题。")])]),s._v(" "),a("p",[s._v("上面的步骤确保两个堆能够平衡\n举个小例子就可以解决这个问题了！假设我们从流中获取输入 "),a("code",[s._v("[41、35、62、5、97、108]")]),s._v("。算法的运行过程如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Adding number 41\nMaxHeap lo: [41]           // MaxHeap stores the largest value at the top (index 0)\nMinHeap hi: []             // MinHeap stores the smallest value at the top (index 0)\nMedian is 41\n=======================\nAdding number 35\nMaxHeap lo: [35]\nMinHeap hi: [41]\nMedian is 38\n=======================\nAdding number 62\nMaxHeap lo: [41, 35]\nMinHeap hi: [62]\nMedian is 41\n=======================\nAdding number 4\nMaxHeap lo: [35, 4]\nMinHeap hi: [41, 62]\nMedian is 38\n=======================\nAdding number 97\nMaxHeap lo: [41, 35, 4]\nMinHeap hi: [62, 97]\nMedian is 41\n=======================\nAdding number 108\nMaxHeap lo: [41, 35, 4]\nMinHeap hi: [62, 97, 108]\nMedian is 51.5\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("div",{staticClass:"language-C++ [ ] line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class MedianFinder {\n    priority_queue<int> lo;                              // max heap\n    priority_queue<int, vector<int>, greater<int>> hi;   // min heap\n\npublic:\n    // Adds a number into the data structure.\n    void addNum(int num)\n    {\n        lo.push(num);                                    // Add to max heap\n\n        hi.push(lo.top());                               // balancing step\n        lo.pop();\n\n        if (lo.size() < hi.size()) {                     // maintain size property\n            lo.push(hi.top());\n            hi.pop();\n        }\n    }\n\n    // Returns the median of current data stream\n    double findMedian()\n    {\n        return lo.size() > hi.size() ? (double) lo.top() : (lo.top() + hi.top()) * 0.5;\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[a("strong",[s._v("复杂度分析")])]),s._v(" "),a("ul",[a("li",[s._v("时间复杂度： "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mn",[s._v("5")]),a("mo",[s._v("⋅")]),a("mi",[s._v("log")]),a("mo",[s._v("⁡")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")]),a("mo",[s._v("+")]),a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mn",[s._v("1")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")]),a("mo",[s._v("≈")]),a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("log")]),a("mo",[s._v("⁡")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(5 \\cdot \\log n) + O(1) \\approx O(\\log n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord"},[s._v("5")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[s._v("⋅")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mop"},[s._v("lo"),a("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[s._v("+")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord"},[s._v("1")]),a("span",{staticClass:"mclose"},[s._v(")")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),a("span",{staticClass:"mrel"},[s._v("≈")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mop"},[s._v("lo"),a("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(".。")])]),s._v(" "),a("ol",[a("li",[s._v("最坏情况下，从顶部有三个堆插入和两个堆删除。每一个都需要花费 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("log")]),a("mo",[s._v("⁡")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(\\log n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mop"},[s._v("lo"),a("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 时间。")]),s._v(" "),a("li",[s._v("找到平均值需要持续的 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mn",[s._v("1")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(1)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord"},[s._v("1")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 时间，因为可以直接访问堆的顶部。")])]),s._v(" "),a("ul",[a("li",[s._v("空间复杂度："),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 用于在容器中保存输入的线性空间。")])]),s._v(" "),a("h4",{attrs:{id:"方法四：multiset-和双指针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法四：multiset-和双指针"}},[s._v("#")]),s._v(" 方法四：Multiset 和双指针")]),s._v(" "),a("p",[s._v("自平衡二进制搜索树（如AVL树）具有一些非常有趣的特性。它们将树的高度保持在对数范围内。因此，插入新元素具有相当好的时间性能。中值总是缠绕在树根或它的一个子树上。使用与方法 3 相同的方法解决这个问题，但是使用自平衡二叉树似乎是一个不错的选择。但是，实现这样一个树并不是简单的，而且容易出错。")]),s._v(" "),a("p",[s._v("大多数语言实现模拟这种行为的是 "),a("code",[s._v("multiset")]),s._v(" 类。唯一的问题是跟踪中值元素。这很容易用指针解决！")]),s._v(" "),a("p",[s._v("我们保持两个指针：一个用于中位数较低的元素，另一个用于中位数较高的元素。当元素总数为奇数时，两个指针都指向同一个中值元素（因为在本例中只有一个中值）。当元素数为偶数时，指针指向两个连续的元素，其平均值是输入的代表中位数。")]),s._v(" "),a("p",[a("strong",[s._v("算法：")])]),s._v(" "),a("ul",[a("li",[s._v("两个迭代器/指针 "),a("code",[s._v("lo_median")]),s._v("  和 "),a("code",[s._v("hi_median")]),s._v("，它们在 "),a("code",[s._v("multiset")]),s._v("上迭代 "),a("code",[s._v("data")]),s._v("。")]),s._v(" "),a("li",[s._v("添加数字 "),a("code",[s._v("num")]),s._v(" 时，会出现三种情况：")])]),s._v(" "),a("ol",[a("li",[s._v("容器当前为空。因此，我们只需插入 "),a("code",[s._v("num")]),s._v(" 并设置两个指针指向这个元素。")]),s._v(" "),a("li",[s._v("容器当前包含奇数个元素。这意味着两个指针当前都指向同一个元素。\n"),a("ul",[a("li",[s._v("如果 "),a("code",[s._v("num")]),s._v(" 不等于当前的中位数元素，则 "),a("code",[s._v("num")]),s._v(" 将位于元素的任一侧。无论哪一边，该部分的大小都会增加，因此相应的指针会更新。例如，如果 "),a("code",[s._v("num")]),s._v(" 小于中位数元素，则在插入 "),a("code",[s._v("num")]),s._v(" 时，输入的较小半部分的大小将增加 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mn",[s._v("1")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("1")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),a("span",{staticClass:"mord"},[s._v("1")])])])]),s._v("。")]),s._v(" "),a("li",[s._v("如果 "),a("code",[s._v("num")]),s._v(" 等于当前的中位数元素，那么所采取的操作取决于 "),a("code",[s._v("num")]),s._v(" 是如何插入数据的。")])])])]),s._v(" "),a("ul",[a("li",[s._v("容器当前包含偶数个元素。这意味着指针当前指向连续的元素。\n"),a("ol",[a("li",[s._v("如果 "),a("code",[s._v("num")]),s._v(" 是两个中值元素之间的数字，则 "),a("code",[s._v("num")]),s._v(" 将成为新的中值。两个指针都必须指向它。")]),s._v(" "),a("li",[s._v("否则，"),a("code",[s._v("num")]),s._v(" 会增加较小或较高一半的大小。我们相应地更新指针。必须记住，两个指针现在必须指向同一个元素。")])])]),s._v(" "),a("li",[s._v("找到中间值很容易！它只是两个指针 "),a("code",[s._v("lo_median")]),s._v(" 和 "),a("code",[s._v("hi_median")]),s._v(" 所指元素的平均值。")])]),s._v(" "),a("div",{staticClass:"language-C++ [ ] line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class MedianFinder {\n    multiset<int> data;\n    multiset<int>::iterator lo_median, hi_median;\n\npublic:\n    MedianFinder()\n        : lo_median(data.end())\n        , hi_median(data.end())\n    {\n    }\n\n    void addNum(int num)\n    {\n        const size_t n = data.size();   // store previous size\n\n        data.insert(num);               // insert into multiset\n\n        if (!n) {\n            // no elements before, one element now\n            lo_median = hi_median = data.begin();\n        }\n        else if (n & 1) {\n            // odd size before (i.e. lo == hi), even size now (i.e. hi = lo + 1)\n\n            if (num < *lo_median)       // num < lo\n                lo_median--;\n            else                        // num >= hi\n                hi_median++;            // insertion at end of equal range\n        }\n        else {\n            // even size before (i.e. hi = lo + 1), odd size now (i.e. lo == hi)\n\n            if (num > *lo_median && num < *hi_median) {\n                lo_median++;                    // num in between lo and hi\n                hi_median--;\n            }\n            else if (num >= *hi_median)         // num inserted after hi\n                lo_median++;\n            else                                // num <= lo < hi\n                lo_median = --hi_median;        // insertion at end of equal range spoils lo\n        }\n    }\n\n    double findMedian()\n    {\n        return (*lo_median + *hi_median) * 0.5;\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br")])]),a("p",[s._v("此解决方案的单指针版本更短（但更难理解），如下所示：")]),s._v(" "),a("div",{staticClass:"language-C++ [ ] line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class MedianFinder {\n    multiset<int> data;\n    multiset<int>::iterator mid;\n\npublic:\n    MedianFinder()\n        : mid(data.end())\n    {\n    }\n\n    void addNum(int num)\n    {\n        const int n = data.size();\n        data.insert(num);\n\n        if (!n)                                 // first element inserted\n            mid = data.begin();\n        else if (num < *mid)                    // median is decreased\n            mid = (n & 1 ? mid : prev(mid));\n        else                                    // median is increased\n            mid = (n & 1 ? next(mid) : mid);\n    }\n\n    double findMedian()\n    {\n        const int n = data.size();\n        return (*mid + *next(mid, n % 2 - 1)) * 0.5;\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("p",[a("strong",[s._v("复杂度分析")])]),s._v(" "),a("ul",[a("li",[s._v("时间复杂度："),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("log")]),a("mo",[s._v("⁡")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")]),a("mo",[s._v("+")]),a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mn",[s._v("1")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")]),a("mo",[s._v("≈")]),a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("log")]),a("mo",[s._v("⁡")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(\\log n) + O(1) \\approx O(\\log n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mop"},[s._v("lo"),a("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[s._v("+")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord"},[s._v("1")]),a("span",{staticClass:"mclose"},[s._v(")")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),a("span",{staticClass:"mrel"},[s._v("≈")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mop"},[s._v("lo"),a("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v("。")])]),s._v(" "),a("ol",[a("li",[s._v("对于标准 "),a("code",[s._v("multiset")]),s._v(" 方案，插入数字需要花费 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("log")]),a("mo",[s._v("⁡")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(\\log n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mop"},[s._v("lo"),a("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 时间。")]),s._v(" "),a("li",[s._v("找到平均值需要固定的 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mn",[s._v("1")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(1)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord"},[s._v("1")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 时间，因为中位数元素可以直接从两个指针访问。")])]),s._v(" "),a("ul",[a("li",[s._v("空间复杂度："),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("O")]),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("n")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(n)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord mathdefault"},[s._v("n")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" 用于在容器中保存输入的线性空间。")])]),s._v(" "),a("h2",{attrs:{id:"提交历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交历史"}},[s._v("#")]),s._v(" 提交历史")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("提交时间")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("提交结果")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("标记状态")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("我的注释")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("执行时间")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("战胜比例")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("内存消耗")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("语言")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("2021-06-27 11:02:11")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("a",{attrs:{href:"https://leetcode-cn.com/submissions/detail/190066399/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Accepted"),a("OutboundLink")],1)]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("🚩")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}}),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("66 ms")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("100.0%")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("49.5 MB")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("java")])])])]),s._v(" "),a("h2",{attrs:{id:"统计信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统计信息"}},[s._v("#")]),s._v(" 统计信息")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("通过次数")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("提交次数")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("AC比率")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("39360")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("75430")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("52.2%")])])])]),s._v(" "),a("h2",{attrs:{id:"相似题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相似题目"}},[s._v("#")]),s._v(" 相似题目")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("题目")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("难度")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("a",{attrs:{href:"https://leetcode-cn.com/problems/sliding-window-median/",target:"_blank",rel:"noopener noreferrer"}},[s._v("滑动窗口中位数"),a("OutboundLink")],1)]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("困难")])])])])],1)}),[],!1,null,null,null);t.default=e.exports}}]);