(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{1809:function(t,s,a){t.exports=a.p+"assets/img/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof-0.114ceb51.jpg"},1810:function(t,s,a){t.exports=a.p+"assets/img/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof-1.495dc71e.jpg"},1811:function(t,s,a){t.exports=a.p+"assets/img/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof-2.ec9db22e.jpg"},1812:function(t,s,a){t.exports=a.p+"assets/img/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof-3.d6fe2da4.jpg"},1813:function(t,s,a){t.exports=a.p+"assets/img/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof-4.6d919581.jpg"},1814:function(t,s,a){t.exports=a.p+"assets/img/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof-5.2db92891.jpg"},1815:function(t,s,a){t.exports=a.p+"assets/img/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof-6.0c0d02b0.jpg"},1816:function(t,s,a){t.exports=a.p+"assets/img/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof-7.1cbd0139.jpg"},1817:function(t,s,a){t.exports=a.p+"assets/img/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof-8.ee843c00.jpg"},2079:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"中文题目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#中文题目"}},[t._v("#")]),t._v(" 中文题目")]),t._v(" "),e("div",[e("p",[t._v("输入两个链表，找出它们的第一个公共节点。")]),t._v(" "),e("p",[t._v("如下面的两个链表"),e("strong",[t._v("：")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_statement.png",target:"_blank"}},[e("img",{staticStyle:{height:"130px",width:"400px"},attrs:{alt:"",src:"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_statement.png"}})])]),t._v(" "),e("p",[t._v("在节点 c1 开始相交。")]),t._v(" "),e("p",[t._v(" ")]),t._v(" "),e("p",[e("strong",[t._v("示例 1：")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://assets.leetcode.com/uploads/2018/12/13/160_example_1.png",target:"_blank"}},[e("img",{staticStyle:{height:"130px",width:"400px"},attrs:{alt:"",src:"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_example_1.png"}})])]),t._v(" "),e("pre",[e("strong",[t._v("输入：")]),t._v("intersectVal = 8, listA = [4,1,8,4,5], listB = [5,0,1,8,4,5], skipA = 2, skipB = 3\n"),e("strong",[t._v("输出：")]),t._v("Reference of the node with value = 8\n"),e("strong",[t._v("输入解释：")]),t._v("相交节点的值为 8 （注意，如果两个列表相交则不能为 0）。从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,0,1,8,4,5]。在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n")]),t._v(" "),e("p",[t._v(" ")]),t._v(" "),e("p",[e("strong",[t._v("示例 2：")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://assets.leetcode.com/uploads/2018/12/13/160_example_2.png",target:"_blank"}},[e("img",{staticStyle:{height:"136px",width:"350px"},attrs:{alt:"",src:"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_example_2.png"}})])]),t._v(" "),e("pre",[e("strong",[t._v("输入：")]),t._v("intersectVal = 2, listA = [0,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n"),e("strong",[t._v("输出：")]),t._v("Reference of the node with value = 2\n"),e("strong",[t._v("输入解释：")]),t._v("相交节点的值为 2 （注意，如果两个列表相交则不能为 0）。从各自的表头开始算起，链表 A 为 [0,9,1,2,4]，链表 B 为 [3,2,4]。在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n")]),t._v(" "),e("p",[t._v(" ")]),t._v(" "),e("p",[e("strong",[t._v("示例 3：")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://assets.leetcode.com/uploads/2018/12/13/160_example_3.png",target:"_blank"}},[e("img",{staticStyle:{height:"126px",width:"200px"},attrs:{alt:"",src:"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_example_3.png"}})])]),t._v(" "),e("pre",[e("strong",[t._v("输入：")]),t._v("intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n"),e("strong",[t._v("输出：")]),t._v("null\n"),e("strong",[t._v("输入解释：")]),t._v("从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n"),e("strong",[t._v("解释：")]),t._v("这两个链表不相交，因此返回 null。\n")]),t._v(" "),e("p",[t._v(" ")]),t._v(" "),e("p",[e("strong",[t._v("注意：")])]),t._v(" "),e("ul",[e("li",[t._v("如果两个链表没有交点，返回 "),e("code",[t._v("null")]),t._v(".")]),t._v(" "),e("li",[t._v("在返回结果后，两个链表仍须保持原有的结构。")]),t._v(" "),e("li",[t._v("可假定整个链表结构中没有循环。")]),t._v(" "),e("li",[t._v("程序尽量满足 O("),e("em",[t._v("n")]),t._v(") 时间复杂度，且仅用 O("),e("em",[t._v("1")]),t._v(") 内存。")]),t._v(" "),e("li",[t._v("本题与主站 160 题相同："),e("a",{attrs:{href:"https://leetcode-cn.com/problems/intersection-of-two-linked-lists/"}},[t._v("https://leetcode-cn.com/problems/intersection-of-two-linked-lists/")])])])]),t._v(" "),e("h2",{attrs:{id:"通过代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过代码"}},[t._v("#")]),t._v(" 通过代码")]),t._v(" "),e("RecoDemo",[e("template",{slot:"code-Java-1"},[e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ListNode")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIntersectionNode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ListNode")]),t._v(" headA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ListNode")]),t._v(" headB"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("headA "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" headB "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两个链表长度分别为L1+C、L2+C， C为公共部分的长度，按照楼主的做法：")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个人走了L1+C步后，回到第二个人起点走L2步；第2个人走了L2+C步后，回到第一个人起点走L1步。")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当两个人走的步数都为L1+L2+C时就两个家伙就相爱了")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果两个节点没有相遇，最后两人同时走到末尾，都是 null，就结束循环了。")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ListNode")]),t._v(" pA "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" headA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pB "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" headB"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pA "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" pB"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果pA没有走到最后，则next，否则转换头节点")]),t._v("\n            pA "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pA "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" pA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" headB"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            pB "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pB "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" pB"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" headA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" pA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br")])])])],2),t._v(" "),e("h2",{attrs:{id:"高赞题解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高赞题解"}},[t._v("#")]),t._v(" 高赞题解")]),t._v(" "),e("h4",{attrs:{id:"解题思路："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解题思路："}},[t._v("#")]),t._v(" 解题思路：")]),t._v(" "),e("p",[t._v("我们使用两个指针 "),e("code",[t._v("node1")]),t._v("，"),e("code",[t._v("node2")]),t._v(" 分别指向两个链表 "),e("code",[t._v("headA")]),t._v("，"),e("code",[t._v("headB")]),t._v(" 的头结点，然后同时分别逐结点遍历，当 "),e("code",[t._v("node1")]),t._v(" 到达链表 "),e("code",[t._v("headA")]),t._v(" 的末尾时，重新定位到链表 "),e("code",[t._v("headB")]),t._v(" 的头结点；当 "),e("code",[t._v("node2")]),t._v(" 到达链表 "),e("code",[t._v("headB")]),t._v(" 的末尾时，重新定位到链表 "),e("code",[t._v("headA")]),t._v(" 的头结点。")]),t._v(" "),e("p",[t._v("这样，当它们相遇时，所指向的结点就是第一个公共结点。")]),t._v(" "),e("p",[t._v("<"),e("img",{attrs:{src:a(1809),alt:"幻灯片1.JPG"}}),t._v(","),e("img",{attrs:{src:a(1810),alt:"幻灯片2.JPG"}}),t._v(","),e("img",{attrs:{src:a(1811),alt:"幻灯片3.JPG"}}),t._v(","),e("img",{attrs:{src:a(1812),alt:"幻灯片4.JPG"}}),t._v(","),e("img",{attrs:{src:a(1813),alt:"幻灯片5.JPG"}}),t._v(","),e("img",{attrs:{src:a(1814),alt:"幻灯片6.JPG"}}),t._v(","),e("img",{attrs:{src:a(1815),alt:"幻灯片7.JPG"}}),t._v(","),e("img",{attrs:{src:a(1816),alt:"幻灯片8.JPG"}}),t._v(","),e("img",{attrs:{src:a(1817),alt:"幻灯片9.JPG"}}),t._v(">")]),t._v(" "),e("h4",{attrs:{id:"代码："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码："}},[t._v("#")]),t._v(" 代码：")]),t._v(" "),e("div",{staticClass:"language-python [] line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIntersectionNode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" headA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ListNode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" headB"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ListNode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ListNode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        node1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" headA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" headB\n        \n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" node1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" node2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            node1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" node1 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" headB\n            node2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("next")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" node2 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" headA\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" node1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("div",{staticClass:"language-c++ [] line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("class Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        ListNode *node1 = headA;\n        ListNode *node2 = headB;\n        \n        while (node1 != node2) {\n            node1 = node1 != NULL ? node1->next : headB;\n            node2 = node2 != NULL ? node2->next : headA;\n        }\n        return node1;\n    }\n};\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("h4",{attrs:{id:"复杂度分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复杂度分析"}},[t._v("#")]),t._v(" 复杂度分析")]),t._v(" "),e("p",[t._v("- 时间复杂度："),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",[e("semantics",[e("mrow",[e("mi",[t._v("O")]),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("mi",[t._v("M")]),e("mo",[t._v("+")]),e("mi",[t._v("N")]),e("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(M+N)")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10903em"}},[t._v("M")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),e("span",{staticClass:"mbin"},[t._v("+")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")]),e("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v("。\n- 空间复杂度："),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",[e("semantics",[e("mrow",[e("mi",[t._v("O")]),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("mn",[t._v("1")]),e("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(1)")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord"},[t._v("1")]),e("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v("。")]),t._v(" "),e("p",[t._v("欢迎批评指正~")]),t._v(" "),e("h2",{attrs:{id:"提交历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交历史"}},[t._v("#")]),t._v(" 提交历史")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("提交时间")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("提交结果")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("标记状态")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("我的注释")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("执行时间")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("战胜比例")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("内存消耗")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("语言")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("2021-05-31 21:29:48")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("a",{attrs:{href:"https://leetcode-cn.com/submissions/detail/182653642/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Accepted"),e("OutboundLink")],1)]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("🚩")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("双指针，转换头节点")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("2 ms")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("100.0%")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("41 MB")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("java")])])])]),t._v(" "),e("h2",{attrs:{id:"统计信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#统计信息"}},[t._v("#")]),t._v(" 统计信息")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("通过次数")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("提交次数")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("AC比率")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("111705")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("175279")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("63.7%")])])])])],1)}),[],!1,null,null,null);s.default=n.exports}}]);