(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{347:function(t,n,s){"use strict";s.r(n);var a=s(2),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"英文原文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#英文原文"}},[t._v("#")]),t._v(" 英文原文")]),t._v(" "),s("div",[s("p",[t._v("Given a sorted array "),s("em",[t._v("nums")]),t._v(", remove the duplicates "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/In-place_algorithm",target:"_blank"}},[s("strong",[t._v("in-place")])]),t._v(" such that duplicates appeared at most "),s("em",[t._v("twice")]),t._v(" and return the new length.")]),t._v(" "),s("p",[t._v("Do not allocate extra space for another array, you must do this by "),s("strong",[t._v("modifying the input array "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/In-place_algorithm",target:"_blank"}},[t._v("in-place")])]),t._v(" with O(1) extra memory.")]),t._v(" "),s("p",[s("strong",[t._v("Example 1:")])]),t._v(" "),s("pre",[t._v("Given "),s("em",[t._v("nums")]),t._v(" = "),s("strong",[t._v("[1,1,1,2,2,3]")]),t._v(",\n\nYour function should return length = "),s("strong",[s("code",[t._v("5")])]),t._v(", with the first five elements of "),s("em",[s("code",[t._v("nums")])]),t._v(" being "),s("strong",[s("code",[t._v("1, 1, 2, 2")])]),t._v(" and "),s("strong",[t._v("3")]),t._v(" respectively.\n\nIt doesn't matter what you leave beyond the returned length.")]),t._v(" "),s("p",[s("strong",[t._v("Example 2:")])]),t._v(" "),s("pre",[t._v("Given "),s("em",[t._v("nums")]),t._v(" = "),s("strong",[t._v("[0,0,1,1,1,1,2,3,3]")]),t._v(",\n\nYour function should return length = "),s("strong",[s("code",[t._v("7")])]),t._v(", with the first seven elements of "),s("em",[s("code",[t._v("nums")])]),t._v(" being modified to "),s("strong",[s("code",[t._v("0")])]),t._v(", "),s("strong",[t._v("0")]),t._v(", "),s("strong",[t._v("1")]),t._v(", "),s("strong",[t._v("1")]),t._v(", "),s("strong",[t._v("2")]),t._v(", "),s("strong",[t._v("3")]),t._v(" and "),s("strong",[t._v("3")]),t._v(" respectively.\n\nIt doesn't matter what values are set beyond the returned length.\n")]),t._v(" "),s("p",[s("strong",[t._v("Clarification:")])]),t._v(" "),s("p",[t._v("Confused why the returned value is an integer but your answer is an array?")]),t._v(" "),s("p",[t._v("Note that the input array is passed in by "),s("strong",[t._v("reference")]),t._v(", which means modification to the input array will be known to the caller as well.")]),t._v(" "),s("p",[t._v("Internally you can think of this:")]),t._v(" "),s("pre",[t._v("// "),s("strong",[t._v("nums")]),t._v(" is passed in by reference. (i.e., without making a copy)\nint len = removeDuplicates(nums);\n\n// any modification to "),s("strong",[t._v("nums")]),t._v(" in your function would be known by the caller.\n// using the length returned by your function, it prints the first "),s("strong",[t._v("len")]),t._v(" elements.\nfor (int i = 0; i < len; i++) {\n    print(nums[i]);\n}\n")])]),t._v(" "),s("h2",{attrs:{id:"中文翻译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中文翻译"}},[t._v("#")]),t._v(" 中文翻译")]),t._v(" "),s("div",[s("p",[t._v("给定一个排序数组，你需要在"),s("strong",[s("a",{attrs:{href:"http://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95",target:"_blank"}},[t._v("原地")])]),t._v("删除重复出现的元素，使得每个元素最多出现两次，返回移除后数组的新长度。")]),t._v(" "),s("p",[t._v("不要使用额外的数组空间，你必须在"),s("strong",[s("a",{attrs:{href:"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95",target:"_blank"}},[t._v("原地")]),t._v("修改输入数组")]),t._v("并在使用 O(1) 额外空间的条件下完成。")]),t._v(" "),s("p",[s("strong",[t._v("示例 1:")])]),t._v(" "),s("pre",[t._v("给定 "),s("em",[t._v("nums")]),t._v(" = "),s("strong",[t._v("[1,1,1,2,2,3]")]),t._v(",\n\n函数应返回新长度 length = "),s("strong",[s("code",[t._v("5")])]),t._v(", 并且原数组的前五个元素被修改为 "),s("strong",[s("code",[t._v("1, 1, 2, 2,")])]),t._v(" "),s("strong",[t._v("3 ")]),t._v("。\n\n你不需要考虑数组中超出新长度后面的元素。")]),t._v(" "),s("p",[s("strong",[t._v("示例 2:")])]),t._v(" "),s("pre",[t._v("给定 "),s("em",[t._v("nums")]),t._v(" = "),s("strong",[t._v("[0,0,1,1,1,1,2,3,3]")]),t._v(",\n\n函数应返回新长度 length = "),s("strong",[s("code",[t._v("7")])]),t._v(", 并且原数组的前五个元素被修改为 "),s("strong",[s("code",[t._v("0")])]),t._v(", "),s("strong",[t._v("0")]),t._v(", "),s("strong",[t._v("1")]),t._v(", "),s("strong",[t._v("1")]),t._v(", "),s("strong",[t._v("2")]),t._v(", "),s("strong",[t._v("3")]),t._v(", "),s("strong",[t._v("3 。")]),t._v("\n\n你不需要考虑数组中超出新长度后面的元素。\n")]),t._v(" "),s("p",[s("strong",[t._v("说明:")])]),t._v(" "),s("p",[t._v("为什么返回数值是整数，但输出的答案是数组呢?")]),t._v(" "),s("p",[t._v("请注意，输入数组是以"),s("strong",[t._v("“引用”")]),t._v("方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。")]),t._v(" "),s("p",[t._v("你可以想象内部操作如下:")]),t._v(" "),s("pre",[t._v("// "),s("strong",[t._v("nums")]),t._v(" 是以“引用”方式传递的。也就是说，不对实参做任何拷贝\nint len = removeDuplicates(nums);\n\n// 在函数里修改输入数组对于调用者是可见的。\n// 根据你的函数返回的长度, 它会打印出数组中"),s("strong",[t._v("该长度范围内")]),t._v("的所有元素。\nfor (int i = 0; i < len; i++) {\n    print(nums[i]);\n}")])]),t._v(" "),s("h2",{attrs:{id:"通过代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过代码"}},[t._v("#")]),t._v(" 通过代码")]),t._v(" "),s("RecoDemo",[s("template",{slot:"code-Java-1"},[s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeDuplicates")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])])]),t._v(" "),s("template",{slot:"code-Java-2"},[s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeDuplicates")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])])])],2),t._v(" "),s("h2",{attrs:{id:"高赞题解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高赞题解"}},[t._v("#")]),t._v(" 高赞题解")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/**\n     * 思路：三个变量，一次遍历维护这三个值即可\n     * move: 记录后续所有元素要向前移动的距离\n     * curNumCount：当前元素已经存在的个数\n     * curNum：当前遍历的元素\n */\nclass Solution {\n    public int removeDuplicates(int[] nums) {\n        if(nums.length < 1) return 0;\n        int move = 0; // 记录后续所有元素要向前移动的距离\n        int curNumCount = 1; // 当前元素已经存在的个数\n        int curNum = nums[0]; // 当前遍历的元素\n        for(int i = 1; i < nums.length; i++){\n            if(nums[i] == curNum){ // 和遍历过的元素相同\n                curNumCount++; // 增加当前元素个数\n                if(curNumCount > 2){ // 如果大于2，则要记录后面所有元素要向前移动的距离\n                    move++;\n                }else { // numCount <= 2 小于2则继续允许，但是这里要看下是否需要将当前的元素移动，如果move大于零则依旧要移动\n                    if(move > 0){\n                        int temp = nums[i];\n                        nums[i] = nums[i-move];\n                        nums[i-move] = temp;\n                    }\n                }\n            }else{// nums[i] != curNum 和遍历过的元素不同，意味着curNumCount 和curNum要更新了\n                curNumCount = 1;\n                curNum = nums[i];\n                if(move > 0){  // 判断是否需要向前移动\n                    int temp = nums[i];\n                    nums[i] = nums[i-move];\n                    nums[i-move] = temp;\n                }\n            }\n        }\n\n        return nums.length - move;\n    }\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br")])]),s("h2",{attrs:{id:"统计信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#统计信息"}},[t._v("#")]),t._v(" 统计信息")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("通过次数")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("提交次数")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("AC比率")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("28213")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("52559")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("53.7%")])])])]),t._v(" "),s("h2",{attrs:{id:"提交历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交历史"}},[t._v("#")]),t._v(" 提交历史")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("提交时间")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("提交结果")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("执行时间")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("内存消耗")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("语言")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2018-07-27 19:58:48")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://leetcode-cn.com//submissions/detail/4739599/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Accepted"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("2 ms")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("N/A")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("java")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2018-05-13 23:00:41")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://leetcode-cn.com//submissions/detail/2233858/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Accepted"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("2 ms")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("N/A")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("java")])])])]),t._v(" "),s("h2",{attrs:{id:"相似题目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相似题目"}},[t._v("#")]),t._v(" 相似题目")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("题目")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("难度")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/",target:"_blank",rel:"noopener noreferrer"}},[t._v("删除排序数组中的重复项"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("简单")])])])])],1)}),[],!1,null,null,null);n.default=e.exports}}]);